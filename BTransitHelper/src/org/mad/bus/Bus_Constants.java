package org.mad.bus;

import java.util.HashMap;

import com.google.android.maps.GeoPoint;

/**
 * A file that has all the known constants for the BT Transit system. Includes
 * the route names, stop codes and the PR Quad tree.
 * @author karthik
 *
 */
public final class Bus_Constants {

	public static final HashMap<String, String> STOL_ROUTE_NAMES = new HashMap<String, String>();

	public static final HashMap<String, String> LTOS_ROUTE_NAME = new HashMap<String, String>();
	
	public static final HashMap<Integer, String> STOPCODES = new HashMap<Integer, String>();

	public static final HashMap<Integer, GeoPoint> STOP_LOCATIONS = new HashMap<Integer, GeoPoint>();
	
	@SuppressWarnings("rawtypes")
	public static final QuadTreeMap DB = new QuadTreeMap(37200000, 38000000,
			-80500000, -80380000);

	@SuppressWarnings("unchecked")
	private void doStopLocations() {
		DB.put(37228550, -80419740, new Bus_Record(37228550, -80419740, 1100));
		DB.put(37228510, -80422860, new Bus_Record(37228510, -80422860, 1101));
		DB.put(37226399, -80425271, new Bus_Record(37226399, -80425271, 1102));
		DB.put(37228900, -80427450, new Bus_Record(37228900, -80427450, 1103));
		DB.put(37231530, -80422140, new Bus_Record(37231530, -80422140, 1104));
		DB.put(37232560, -80424090, new Bus_Record(37232560, -80424090, 1105));
		DB.put(37231050, -80421580, new Bus_Record(37231050, -80421580, 1106));
		DB.put(37225980, -80422870, new Bus_Record(37225980, -80422870, 1107));
		DB.put(37226670, -80421570, new Bus_Record(37226670, -80421570, 1108));
		DB.put(37229780, -80419110, new Bus_Record(37229780, -80419110, 1110));
		DB.put(37231340, -80416560, new Bus_Record(37231340, -80416560, 1111));
		DB.put(37231341, -80416560, new Bus_Record(37231340, -80416560, 1112));
		DB.put(37229781, -80419110, new Bus_Record(37229781, -80419110, 1113));
		DB.put(37229680, -80420830, new Bus_Record(37229680, -80420830, 1114));
		DB.put(37226750, -80425730, new Bus_Record(37226750, -80425730, 1115));
		DB.put(37222350, -80423480, new Bus_Record(37222350, -80423480, 1116));
		DB.put(37221240, -80422220, new Bus_Record(37221240, -80422220, 1123));
		DB.put(37223130, -80419480, new Bus_Record(37223130, -80419480, 1124));
		DB.put(37225050, -80416730, new Bus_Record(37225050, -80416730, 1125));
		DB.put(37222350, -80423480, new Bus_Record(37222350, -80423480, 1126));
		DB.put(37218521, -80419270, new Bus_Record(37218520, -80419270, 1127));
		DB.put(37218520, -80419270, new Bus_Record(37218520, -80419270, 1128));
		DB.put(37222110, -80419770, new Bus_Record(37222110, -80419770, 1129));
		DB.put(37232130, -80422870, new Bus_Record(37232130, -80422870, 1133));
		DB.put(37231490, -80434590, new Bus_Record(37231490, -80434590, 1200));
		DB.put(37229610, -80437810, new Bus_Record(37229610, -80437810, 1201));
		DB.put(37225310, -80445130, new Bus_Record(37225310, -80445130, 1202));
		DB.put(37224570, -80447340, new Bus_Record(37224570, -80447340, 1203));
		DB.put(37216760, -80453330, new Bus_Record(37216760, -80453330, 1204));
		DB.put(37214460, -80452200, new Bus_Record(37214460, -80452200, 1205));
		DB.put(37215750, -80450450, new Bus_Record(37215750, -80450450, 1206));
		DB.put(37217180, -80448630, new Bus_Record(37217180, -80448630, 1207));
		DB.put(37214130, -80444300, new Bus_Record(37214130, -80444300, 1208));
		DB.put(37213170, -80444160, new Bus_Record(37213170, -80444160, 1209));
		DB.put(37214130, -80444300, new Bus_Record(37214130, -80444300, 1210));
		DB.put(37215980, -80445340, new Bus_Record(37215980, -80445340, 1211));
		DB.put(37217730, -80448210, new Bus_Record(37217730, -80448210, 1212));
		DB.put(37219640, -80448060, new Bus_Record(37219640, -80448060, 1213));
		DB.put(37222060, -80448900, new Bus_Record(37222060, -80448900, 1214));
		DB.put(37224900, -80446340, new Bus_Record(37224900, -80446340, 1215));
		DB.put(37225310, -80445130, new Bus_Record(37225310, -80445130, 1216));
		DB.put(37229610, -80437810, new Bus_Record(37229610, -80437810, 1217));
		DB.put(37231490, -80434590, new Bus_Record(37231490, -80434590, 1218));
		DB.put(37242350, -80422270, new Bus_Record(37242350, -80422270, 1305));
		DB.put(37244230, -80421500, new Bus_Record(37244230, -80421500, 1306));
		DB.put(37245220, -80421530, new Bus_Record(37245220, -80421530, 1307));
		DB.put(37244920, -80425200, new Bus_Record(37244920, -80425200, 1308));
		DB.put(37243790, -80428010, new Bus_Record(37243790, -80428010, 1309));
		DB.put(37242980, -80429670, new Bus_Record(37242980, -80429670, 1310));
		DB.put(37242240, -80433380, new Bus_Record(37242240, -80433380, 1311));
		DB.put(37241030, -80435230, new Bus_Record(37241030, -80435230, 1312));
		DB.put(37237210, -80434810, new Bus_Record(37237210, -80434810, 1313));
		DB.put(37235800, -80434020, new Bus_Record(37235800, -80434020, 1314));
		DB.put(37234190, -80433290, new Bus_Record(37234190, -80433290, 1315));
		DB.put(37234590, -80433380, new Bus_Record(37234590, -80433380, 1316));
		DB.put(37236270, -80434330, new Bus_Record(37236270, -80434330, 1317));
		DB.put(37237920, -80435170, new Bus_Record(37237920, -80435170, 1318));
		DB.put(37241400, -80434980, new Bus_Record(37241400, -80434980, 1319));
		DB.put(37242330, -80432910, new Bus_Record(37242330, -80432910, 1320));
		DB.put(37242740, -80430640, new Bus_Record(37242740, -80430640, 1321));
		DB.put(37242980, -80429670, new Bus_Record(37242980, -80429670, 1322));
		DB.put(37244030, -80427580, new Bus_Record(37244030, -80427580, 1323));
		DB.put(37245100, -80424720, new Bus_Record(37245100, -80424720, 1324));
		DB.put(37245790, -80422840, new Bus_Record(37245790, -80422840, 1325));
		DB.put(37244870, -80421440, new Bus_Record(37244870, -80421440, 1326));
		DB.put(37243500, -80421870, new Bus_Record(37243500, -80421870, 1327));
		DB.put(37242350, -80422270, new Bus_Record(37242350, -80422270, 1328));
		DB.put(37239550, -80426920, new Bus_Record(37239550, -80426920, 1330));
		DB.put(37238030, -80426590, new Bus_Record(37238030, -80426590, 1331));
		DB.put(37236540, -80426820, new Bus_Record(37236540, -80426820, 1332));
		DB.put(37234380, -80425650, new Bus_Record(37234380, -80425650, 1333));
		DB.put(37233820, -80422810, new Bus_Record(37233820, -80422810, 1334));
		DB.put(37242030, -80427650, new Bus_Record(37242030, -80427650, 1338));
		DB.put(37238940, -80422090, new Bus_Record(37238940, -80422090, 1339));
		DB.put(37238060, -80420510, new Bus_Record(37238060, -80420510, 1400));
		DB.put(37238910, -80420070, new Bus_Record(37238910, -80420070, 1401));
		DB.put(37239670, -80418410, new Bus_Record(37239670, -80418410, 1402));
		DB.put(37239300, -80416710, new Bus_Record(37239300, -80416710, 1403));
		DB.put(37240950, -80416240, new Bus_Record(37240950, -80416240, 1404));
		DB.put(37242900, -80414470, new Bus_Record(37242900, -80414470, 1405));
		DB.put(37244970, -80412210, new Bus_Record(37244970, -80412210, 1406));
		DB.put(37245340, -80412850, new Bus_Record(37245340, -80412850, 1407));
		DB.put(37246070, -80414350, new Bus_Record(37246070, -80414350, 1408));
		DB.put(37249090, -80412880, new Bus_Record(37249090, -80412880, 1409));
		DB.put(37250990, -80411590, new Bus_Record(37250990, -80411590, 1410));
		DB.put(37253130, -80410870, new Bus_Record(37253130, -80410870, 1411));
		DB.put(37256100, -80411480, new Bus_Record(37256100, -80411480, 1412));
		DB.put(37254790, -80413410, new Bus_Record(37254790, -80413410, 1413));
		DB.put(37253833, -80417570, new Bus_Record(37253833, -80417570, 1414));
		DB.put(37247420, -80417560, new Bus_Record(37247420, -80417560, 1415));
		DB.put(37245980, -80415110, new Bus_Record(37245980, -80415110, 1416));
		DB.put(37243270, -80417070, new Bus_Record(37243270, -80417070, 1417));
		DB.put(37241530, -80418310, new Bus_Record(37241530, -80418310, 1418));
		DB.put(37240150, -80419280, new Bus_Record(37240150, -80419280, 1419));
		DB.put(37238910, -80420070, new Bus_Record(37238910, -80420070, 1420));
		DB.put(37236000, -80421070, new Bus_Record(37236000, -80421070, 1421));
		DB.put(37234310, -80419520, new Bus_Record(37234310, -80419520, 1422));
		DB.put(37233240, -80418120, new Bus_Record(37233240, -80418120, 1423));
		DB.put(37252480, -80412750, new Bus_Record(37252480, -80412750, 1428));
		DB.put(37249490, -80412590, new Bus_Record(37249490, -80412590, 1429));
		DB.put(37246910, -80416900, new Bus_Record(37246910, -80416900, 1430));
		DB.put(37233940, -80419050, new Bus_Record(37233940, -80419050, 1431));
		DB.put(37230160, -80412730, new Bus_Record(37230160, -80412730, 1500));
		DB.put(37231250, -80411100, new Bus_Record(37231250, -80411100, 1501));
		DB.put(37231810, -80410260, new Bus_Record(37231810, -80410260, 1502));
		DB.put(37232550, -80409170, new Bus_Record(37232550, -80409170, 1503));
		DB.put(37235480, -80408560, new Bus_Record(37235480, -80408560, 1504));
		DB.put(37236620, -80407560, new Bus_Record(37236620, -80407560, 1505));
		DB.put(37237720, -80405990, new Bus_Record(37237720, -80405990, 1506));
		DB.put(37238470, -80404450, new Bus_Record(37238470, -80404450, 1507));
		DB.put(37239190, -80403050, new Bus_Record(37239190, -80403050, 1508));
		DB.put(37240430, -80400520, new Bus_Record(37240430, -80400520, 1509));
		DB.put(37241490, -80399210, new Bus_Record(37241490, -80399210, 1510));
		DB.put(37239220, -80398200, new Bus_Record(37239220, -80398200, 1511));
		DB.put(37241490, -80399210, new Bus_Record(37241490, -80399210, 1512));
		DB.put(37240430, -80400520, new Bus_Record(37240430, -80400520, 1513));
		DB.put(37239190, -80403050, new Bus_Record(37239190, -80403050, 1514));
		DB.put(37238470, -80404450, new Bus_Record(37238470, -80404450, 1515));
		DB.put(37237720, -80405990, new Bus_Record(37237720, -80405990, 1516));
		DB.put(37235800, -80408300, new Bus_Record(37235800, -80408300, 1517));
		DB.put(37232550, -80409170, new Bus_Record(37232550, -80409170, 1518));
		DB.put(37231810, -80410260, new Bus_Record(37231810, -80410260, 1519));
		DB.put(37231250, -80411100, new Bus_Record(37231250, -80411100, 1520));
		DB.put(37230380, -80412370, new Bus_Record(37230380, -80412370, 1521));
		DB.put(37229910, -80414540, new Bus_Record(37229910, -80414540, 1600));
		DB.put(37227820, -80412340, new Bus_Record(37227820, -80412340, 1601));
		DB.put(37225650, -80409970, new Bus_Record(37225650, -80409970, 1602));
		DB.put(37224780, -80409020, new Bus_Record(37224780, -80409020, 1603));
		DB.put(37222890, -80406930, new Bus_Record(37222890, -80406930, 1604));
		DB.put(37222190, -80406160, new Bus_Record(37222190, -80406160, 1605));
		DB.put(37219570, -80403230, new Bus_Record(37219570, -80403230, 1606));
		DB.put(37215810, -80400770, new Bus_Record(37215810, -80400770, 1607));
		DB.put(37212510, -80399990, new Bus_Record(37212510, -80399990, 1608));
		DB.put(37208670, -80396720, new Bus_Record(37208670, -80396720, 1609));
		DB.put(37209000, -80396060, new Bus_Record(37209000, -80396060, 1610));
		DB.put(37209740, -80395690, new Bus_Record(37209740, -80395690, 1611));
		DB.put(37211440, -80393750, new Bus_Record(37211440, -80393750, 1612));
		DB.put(37212720, -80393550, new Bus_Record(37212720, -80393550, 1613));
		DB.put(37213040, -80394090, new Bus_Record(37213040, -80394090, 1614));
		DB.put(37212460, -80396070, new Bus_Record(37212460, -80396070, 1615));
		DB.put(37211850, -80398170, new Bus_Record(37211850, -80398170, 1616));
		DB.put(37211460, -80399610, new Bus_Record(37211460, -80399610, 1617));
		DB.put(37213330, -80400080, new Bus_Record(37213330, -80400080, 1618));
		DB.put(37214190, -80400330, new Bus_Record(37214190, -80400330, 1619));
		DB.put(37215810, -80400770, new Bus_Record(37215810, -80400770, 1620));
		DB.put(37219410, -80402870, new Bus_Record(37219410, -80402870, 1621));
		DB.put(37220940, -80404770, new Bus_Record(37220940, -80404770, 1622));
		DB.put(37222190, -80406160, new Bus_Record(37222190, -80406160, 1623));
		DB.put(37223930, -80408070, new Bus_Record(37223930, -80408070, 1624));
		DB.put(37225100, -80409360, new Bus_Record(37225100, -80409360, 1625));
		DB.put(37226760, -80411180, new Bus_Record(37226760, -80411180, 1626));
		DB.put(37228780, -80413360, new Bus_Record(37228780, -80413360, 1627));
		DB.put(37229910, -80414540, new Bus_Record(37229910, -80414540, 1628));
		DB.put(37211850, -80398170, new Bus_Record(37211850, -80398170, 1629));
		DB.put(37212460, -80396070, new Bus_Record(37212460, -80396070, 1630));
		DB.put(37212430, -80393400, new Bus_Record(37212430, -80393400, 1631));
		DB.put(37211440, -80393750, new Bus_Record(37211440, -80393750, 1632));
		DB.put(37209740, -80395690, new Bus_Record(37209740, -80395690, 1633));
		DB.put(37208670, -80396720, new Bus_Record(37208670, -80396720, 1634));
		DB.put(37223930, -80408070, new Bus_Record(37223930, -80408070, 1635));
		DB.put(37193630, -80400270, new Bus_Record(37193630, -80400270, 1636));
		DB.put(37194230, -80397630, new Bus_Record(37194230, -80397630, 1637));
		DB.put(37197130, -80400270, new Bus_Record(37197130, -80400270, 1638));
		DB.put(37201980, -80399450, new Bus_Record(37201980, -80399450, 1639));
		DB.put(37207230, -80398980, new Bus_Record(37207230, -80398980, 1640));
		DB.put(37207526, -80393889, new Bus_Record(37207526, -80393889, 1641));
		DB.put(37207230, -80398980, new Bus_Record(37207230, -80398980, 1642));
		DB.put(37202750, -80399380, new Bus_Record(37202750, -80399380, 1643));
		DB.put(37200160, -80400310, new Bus_Record(37200160, -80400310, 1644));
		DB.put(37196790, -80400270, new Bus_Record(37196790, -80400270, 1645));
		DB.put(37194230, -80397630, new Bus_Record(37194230, -80397630, 1646));
		DB.put(37193630, -80400270, new Bus_Record(37193630, -80400270, 1647));
		DB.put(37214820, -80418410, new Bus_Record(37214820, -80418410, 1700));
		DB.put(37201700, -80411720, new Bus_Record(37201700, -80411720, 1701));
		DB.put(37201130, -80410650, new Bus_Record(37201130, -80410650, 1702));
		DB.put(37205299, -80408502, new Bus_Record(37205299, -80408502, 1703));
		DB.put(37215740, -80418690, new Bus_Record(37215740, -80418690, 1704));
		DB.put(37204000, -80412460, new Bus_Record(37204000, -80412460, 1705));
		DB.put(37204280, -80409930, new Bus_Record(37204280, -80409930, 1706));
		DB.put(37201130, -80410650, new Bus_Record(37201130, -80410650, 1707));
		DB.put(37201700, -80411720, new Bus_Record(37201700, -80411720, 1708));
		DB.put(37204000, -80412460, new Bus_Record(37204000, -80412460, 1709));
		DB.put(37198940, -80405450, new Bus_Record(37198940, -80405450, 1710));
		DB.put(37196100, -80403920, new Bus_Record(37196100, -80403920, 1711));
		DB.put(37196100, -80403920, new Bus_Record(37196100, -80403920, 1712));
		DB.put(37202640, -80405880, new Bus_Record(37202640, -80405880, 1713));
		DB.put(37200140, -80407850, new Bus_Record(37200140, -80407850, 1714));
		DB.put(37201870, -80409790, new Bus_Record(37201870, -80409790, 1715));
		DB.put(37199970, -80405340, new Bus_Record(37199970, -80405340, 1716));
		DB.put(37163380, -80429450, new Bus_Record(37163380, -80429450, 1800));
		DB.put(37164230, -80428980, new Bus_Record(37164230, -80428980, 1801));
		DB.put(37170439, -80426497, new Bus_Record(37170439, -80426497, 1802));
		DB.put(37187730, -80414310, new Bus_Record(37187730, -80414310, 1803));
		DB.put(37131420, -80393310, new Bus_Record(37131420, -80393310, 2100));
		DB.put(37137200, -80396200, new Bus_Record(37137200, -80396200, 2101));
		DB.put(37137877, -80396971, new Bus_Record(37137877, -80396971, 2102));
		DB.put(37142530, -80394224, new Bus_Record(37142530, -80394224, 2103));
		DB.put(37143693, -80404228, new Bus_Record(37143693, -80404228, 2104));
		DB.put(37138818, -80412672, new Bus_Record(37138818, -80412672, 2105));
		DB.put(37130820, -80414600, new Bus_Record(37130820, -80414600, 2108));
		DB.put(37128290, -80410590, new Bus_Record(37128290, -80410590, 2109));
		DB.put(37131360, -80407673, new Bus_Record(37131360, -80407673, 2110));
		DB.put(37130170, -80402130, new Bus_Record(37130170, -80402130, 2111));
		DB.put(37155528, -80414785, new Bus_Record(37155528, -80414785, 2112));
		DB.put(37136390, -80370010, new Bus_Record(37136390, -80370010, 2113));
		DB.put(37137180, -80372850, new Bus_Record(37137180, -80372850, 2114));
		DB.put(37127090, -80370410, new Bus_Record(37127090, -80370410, 2115));
		DB.put(37134120, -80384980, new Bus_Record(37134120, -80384980, 2116));
		DB.put(37131420, -80393310, new Bus_Record(37131420, -80393310, 2117));
		DB.put(37130460, -80397280, new Bus_Record(37130460, -80397280, 2118));
		DB.put(37130160, -80402670, new Bus_Record(37130160, -80402670, 2119));
		DB.put(37130720, -80407740, new Bus_Record(37130720, -80407740, 2120));
		DB.put(37135003, -80378994, new Bus_Record(37135003, -80378994, 2121));
		DB.put(37133760, -80400690, new Bus_Record(37133760, -80400690, 2122));
		DB.put(37133760, -80400690, new Bus_Record(37133760, -80400690, 2123));
		DB.put(37132420, -80405750, new Bus_Record(37132420, -80405750, 2124));
		DB.put(37132420, -80405750, new Bus_Record(37132420, -80405750, 2125));
		DB.put(37132430, -80412490, new Bus_Record(37132430, -80412490, 2126));
		DB.put(37132430, -80412490, new Bus_Record(37132430, -80412490, 2127));
		DB.put(37148440, -80416300, new Bus_Record(37148440, -80416300, 2128));
		DB.put(37146790, -80425050, new Bus_Record(37146790, -80425050, 2129));
		DB.put(37144250, -80423830, new Bus_Record(37144250, -80423830, 2130));
		DB.put(37130420, -80397720, new Bus_Record(37130420, -80397720, 2131));
		DB.put(37152000, -80412850, new Bus_Record(37152000, -80412850, 2132));
		DB.put(37158240, -80423150, new Bus_Record(37158240, -80423150, 2200));
		DB.put(37156440, -80421240, new Bus_Record(37156440, -80421240, 2201));
		DB.put(37162574, -80420869, new Bus_Record(37162574, -80420869, 2202));
		DB.put(37164090, -80419920, new Bus_Record(37164090, -80419920, 2203));
		DB.put(37165300, -80417930, new Bus_Record(37165300, -80417930, 2204));
		DB.put(37167600, -80417480, new Bus_Record(37167600, -80417480, 2205));
		DB.put(37168800, -80419600, new Bus_Record(37168800, -80419600, 2206));
		DB.put(37166710, -80425190, new Bus_Record(37166710, -80425190, 2209));
		DB.put(37164230, -80428980, new Bus_Record(37164230, -80428980, 2210));
		DB.put(37136520, -80413790, new Bus_Record(37136520, -80413790, 2301));
		DB.put(37136520, -80413790, new Bus_Record(37136520, -80413790, 2302));
		DB.put(37151160, -80414520, new Bus_Record(37151160, -80414520, 2303));


	}

	public Bus_Constants() {
		doShortToLong();
		doLongToShort();
		doStopCodes();
		doStopLocations();
		doStopLocationMapping();
	}

	private void doStopLocationMapping() {
		STOP_LOCATIONS.put(1100, new GeoPoint(37228550, -80419740));
		STOP_LOCATIONS.put(1101, new GeoPoint(37228510, -80422860));
		STOP_LOCATIONS.put(1102, new GeoPoint(37226399, -80425271));
		STOP_LOCATIONS.put(1103, new GeoPoint(37228900, -80427450));
		STOP_LOCATIONS.put(1104, new GeoPoint(37231530, -80422140));
		STOP_LOCATIONS.put(1105, new GeoPoint(37232560, -80424090));
		STOP_LOCATIONS.put(1106, new GeoPoint(37231050, -80421580));
		STOP_LOCATIONS.put(1107, new GeoPoint(37225980, -80422870));
		STOP_LOCATIONS.put(1108, new GeoPoint(37226670, -80421570));
		STOP_LOCATIONS.put(1110, new GeoPoint(37229780, -80419110));
		STOP_LOCATIONS.put(1111, new GeoPoint(37231340, -80416560));
		STOP_LOCATIONS.put(1112, new GeoPoint(37231340, -80416560));
		STOP_LOCATIONS.put(1113, new GeoPoint(37229781, -80419110));
		STOP_LOCATIONS.put(1114, new GeoPoint(37229680, -80420830));
		STOP_LOCATIONS.put(1115, new GeoPoint(37226750, -80425730));
		STOP_LOCATIONS.put(1116, new GeoPoint(37222350, -80423480));
		STOP_LOCATIONS.put(1123, new GeoPoint(37221240, -80422220));
		STOP_LOCATIONS.put(1124, new GeoPoint(37223130, -80419480));
		STOP_LOCATIONS.put(1125, new GeoPoint(37225050, -80416730));
		STOP_LOCATIONS.put(1126, new GeoPoint(37222350, -80423480));
		STOP_LOCATIONS.put(1127, new GeoPoint(37218520, -80419270));
		STOP_LOCATIONS.put(1128, new GeoPoint(37218520, -80419270));
		STOP_LOCATIONS.put(1129, new GeoPoint(37222110, -80419770));
		STOP_LOCATIONS.put(1133, new GeoPoint(37232130, -80422870));
		STOP_LOCATIONS.put(1200, new GeoPoint(37231490, -80434590));
		STOP_LOCATIONS.put(1201, new GeoPoint(37229610, -80437810));
		STOP_LOCATIONS.put(1202, new GeoPoint(37225310, -80445130));
		STOP_LOCATIONS.put(1203, new GeoPoint(37224570, -80447340));
		STOP_LOCATIONS.put(1204, new GeoPoint(37216760, -80453330));
		STOP_LOCATIONS.put(1205, new GeoPoint(37214460, -80452200));
		STOP_LOCATIONS.put(1206, new GeoPoint(37215750, -80450450));
		STOP_LOCATIONS.put(1207, new GeoPoint(37217180, -80448630));
		STOP_LOCATIONS.put(1208, new GeoPoint(37214130, -80444300));
		STOP_LOCATIONS.put(1209, new GeoPoint(37213170, -80444160));
		STOP_LOCATIONS.put(1210, new GeoPoint(37214130, -80444300));
		STOP_LOCATIONS.put(1211, new GeoPoint(37215980, -80445340));
		STOP_LOCATIONS.put(1212, new GeoPoint(37217730, -80448210));
		STOP_LOCATIONS.put(1213, new GeoPoint(37219640, -80448060));
		STOP_LOCATIONS.put(1214, new GeoPoint(37222060, -80448900));
		STOP_LOCATIONS.put(1215, new GeoPoint(37224900, -80446340));
		STOP_LOCATIONS.put(1216, new GeoPoint(37225310, -80445130));
		STOP_LOCATIONS.put(1217, new GeoPoint(37229610, -80437810));
		STOP_LOCATIONS.put(1218, new GeoPoint(37231490, -80434590));
		STOP_LOCATIONS.put(1305, new GeoPoint(37242350, -80422270));
		STOP_LOCATIONS.put(1306, new GeoPoint(37244230, -80421500));
		STOP_LOCATIONS.put(1307, new GeoPoint(37245220, -80421530));
		STOP_LOCATIONS.put(1308, new GeoPoint(37244920, -80425200));
		STOP_LOCATIONS.put(1309, new GeoPoint(37243790, -80428010));
		STOP_LOCATIONS.put(1310, new GeoPoint(37242980, -80429670));
		STOP_LOCATIONS.put(1311, new GeoPoint(37242240, -80433380));
		STOP_LOCATIONS.put(1312, new GeoPoint(37241030, -80435230));
		STOP_LOCATIONS.put(1313, new GeoPoint(37237210, -80434810));
		STOP_LOCATIONS.put(1314, new GeoPoint(37235800, -80434020));
		STOP_LOCATIONS.put(1315, new GeoPoint(37234190, -80433290));
		STOP_LOCATIONS.put(1316, new GeoPoint(37234590, -80433380));
		STOP_LOCATIONS.put(1317, new GeoPoint(37236270, -80434330));
		STOP_LOCATIONS.put(1318, new GeoPoint(37237920, -80435170));
		STOP_LOCATIONS.put(1319, new GeoPoint(37241400, -80434980));
		STOP_LOCATIONS.put(1320, new GeoPoint(37242330, -80432910));
		STOP_LOCATIONS.put(1321, new GeoPoint(37242740, -80430640));
		STOP_LOCATIONS.put(1322, new GeoPoint(37242980, -80429670));
		STOP_LOCATIONS.put(1323, new GeoPoint(37244030, -80427580));
		STOP_LOCATIONS.put(1324, new GeoPoint(37245100, -80424720));
		STOP_LOCATIONS.put(1325, new GeoPoint(37245790, -80422840));
		STOP_LOCATIONS.put(1326, new GeoPoint(37244870, -80421440));
		STOP_LOCATIONS.put(1327, new GeoPoint(37243500, -80421870));
		STOP_LOCATIONS.put(1328, new GeoPoint(37242350, -80422270));
		STOP_LOCATIONS.put(1330, new GeoPoint(37239550, -80426920));
		STOP_LOCATIONS.put(1331, new GeoPoint(37238030, -80426590));
		STOP_LOCATIONS.put(1332, new GeoPoint(37236540, -80426820));
		STOP_LOCATIONS.put(1333, new GeoPoint(37234380, -80425650));
		STOP_LOCATIONS.put(1334, new GeoPoint(37233820, -80422810));
		STOP_LOCATIONS.put(1338, new GeoPoint(37242030, -80427650));
		STOP_LOCATIONS.put(1339, new GeoPoint(37238940, -80422090));
		STOP_LOCATIONS.put(1400, new GeoPoint(37238060, -80420510));
		STOP_LOCATIONS.put(1401, new GeoPoint(37238910, -80420070));
		STOP_LOCATIONS.put(1402, new GeoPoint(37239670, -80418410));
		STOP_LOCATIONS.put(1403, new GeoPoint(37239300, -80416710));
		STOP_LOCATIONS.put(1404, new GeoPoint(37240950, -80416240));
		STOP_LOCATIONS.put(1405, new GeoPoint(37242900, -80414470));
		STOP_LOCATIONS.put(1406, new GeoPoint(37244970, -80412210));
		STOP_LOCATIONS.put(1407, new GeoPoint(37245340, -80412850));
		STOP_LOCATIONS.put(1408, new GeoPoint(37246070, -80414350));
		STOP_LOCATIONS.put(1409, new GeoPoint(37249090, -80412880));
		STOP_LOCATIONS.put(1410, new GeoPoint(37250990, -80411590));
		STOP_LOCATIONS.put(1411, new GeoPoint(37253130, -80410870));
		STOP_LOCATIONS.put(1412, new GeoPoint(37256100, -80411480));
		STOP_LOCATIONS.put(1413, new GeoPoint(37254790, -80413410));
		STOP_LOCATIONS.put(1414, new GeoPoint(37253833, -80417570));
		STOP_LOCATIONS.put(1415, new GeoPoint(37247420, -80417560));
		STOP_LOCATIONS.put(1416, new GeoPoint(37245980, -80415110));
		STOP_LOCATIONS.put(1417, new GeoPoint(37243270, -80417070));
		STOP_LOCATIONS.put(1418, new GeoPoint(37241530, -80418310));
		STOP_LOCATIONS.put(1419, new GeoPoint(37240150, -80419280));
		STOP_LOCATIONS.put(1420, new GeoPoint(37238910, -80420070));
		STOP_LOCATIONS.put(1421, new GeoPoint(37236000, -80421070));
		STOP_LOCATIONS.put(1422, new GeoPoint(37234310, -80419520));
		STOP_LOCATIONS.put(1423, new GeoPoint(37233240, -80418120));
		STOP_LOCATIONS.put(1428, new GeoPoint(37252480, -80412750));
		STOP_LOCATIONS.put(1429, new GeoPoint(37249490, -80412590));
		STOP_LOCATIONS.put(1430, new GeoPoint(37246910, -80416900));
		STOP_LOCATIONS.put(1431, new GeoPoint(37233940, -80419050));
		STOP_LOCATIONS.put(1500, new GeoPoint(37230160, -80412730));
		STOP_LOCATIONS.put(1501, new GeoPoint(37231250, -80411100));
		STOP_LOCATIONS.put(1502, new GeoPoint(37231810, -80410260));
		STOP_LOCATIONS.put(1503, new GeoPoint(37232550, -80409170));
		STOP_LOCATIONS.put(1504, new GeoPoint(37235480, -80408560));
		STOP_LOCATIONS.put(1505, new GeoPoint(37236620, -80407560));
		STOP_LOCATIONS.put(1506, new GeoPoint(37237720, -80405990));
		STOP_LOCATIONS.put(1507, new GeoPoint(37238470, -80404450));
		STOP_LOCATIONS.put(1508, new GeoPoint(37239190, -80403050));
		STOP_LOCATIONS.put(1509, new GeoPoint(37240430, -80400520));
		STOP_LOCATIONS.put(1510, new GeoPoint(37241490, -80399210));
		STOP_LOCATIONS.put(1511, new GeoPoint(37239220, -80398200));
		STOP_LOCATIONS.put(1512, new GeoPoint(37241490, -80399210));
		STOP_LOCATIONS.put(1513, new GeoPoint(37240430, -80400520));
		STOP_LOCATIONS.put(1514, new GeoPoint(37239190, -80403050));
		STOP_LOCATIONS.put(1515, new GeoPoint(37238470, -80404450));
		STOP_LOCATIONS.put(1516, new GeoPoint(37237720, -80405990));
		STOP_LOCATIONS.put(1517, new GeoPoint(37235800, -80408300));
		STOP_LOCATIONS.put(1518, new GeoPoint(37232550, -80409170));
		STOP_LOCATIONS.put(1519, new GeoPoint(37231810, -80410260));
		STOP_LOCATIONS.put(1520, new GeoPoint(37231250, -80411100));
		STOP_LOCATIONS.put(1521, new GeoPoint(37230380, -80412370));
		STOP_LOCATIONS.put(1600, new GeoPoint(37229910, -80414540));
		STOP_LOCATIONS.put(1601, new GeoPoint(37227820, -80412340));
		STOP_LOCATIONS.put(1602, new GeoPoint(37225650, -80409970));
		STOP_LOCATIONS.put(1603, new GeoPoint(37224780, -80409020));
		STOP_LOCATIONS.put(1604, new GeoPoint(37222890, -80406930));
		STOP_LOCATIONS.put(1605, new GeoPoint(37222190, -80406160));
		STOP_LOCATIONS.put(1606, new GeoPoint(37219570, -80403230));
		STOP_LOCATIONS.put(1607, new GeoPoint(37215810, -80400770));
		STOP_LOCATIONS.put(1608, new GeoPoint(37212510, -80399990));
		STOP_LOCATIONS.put(1609, new GeoPoint(37208670, -80396720));
		STOP_LOCATIONS.put(1610, new GeoPoint(37209000, -80396060));
		STOP_LOCATIONS.put(1611, new GeoPoint(37209740, -80395690));
		STOP_LOCATIONS.put(1612, new GeoPoint(37211440, -80393750));
		STOP_LOCATIONS.put(1613, new GeoPoint(37212720, -80393550));
		STOP_LOCATIONS.put(1614, new GeoPoint(37213040, -80394090));
		STOP_LOCATIONS.put(1615, new GeoPoint(37212460, -80396070));
		STOP_LOCATIONS.put(1616, new GeoPoint(37211850, -80398170));
		STOP_LOCATIONS.put(1617, new GeoPoint(37211460, -80399610));
		STOP_LOCATIONS.put(1618, new GeoPoint(37213330, -80400080));
		STOP_LOCATIONS.put(1619, new GeoPoint(37214190, -80400330));
		STOP_LOCATIONS.put(1620, new GeoPoint(37215810, -80400770));
		STOP_LOCATIONS.put(1621, new GeoPoint(37219410, -80402870));
		STOP_LOCATIONS.put(1622, new GeoPoint(37220940, -80404770));
		STOP_LOCATIONS.put(1623, new GeoPoint(37222190, -80406160));
		STOP_LOCATIONS.put(1624, new GeoPoint(37223930, -80408070));
		STOP_LOCATIONS.put(1625, new GeoPoint(37225100, -80409360));
		STOP_LOCATIONS.put(1626, new GeoPoint(37226760, -80411180));
		STOP_LOCATIONS.put(1627, new GeoPoint(37228780, -80413360));
		STOP_LOCATIONS.put(1628, new GeoPoint(37229910, -80414540));
		STOP_LOCATIONS.put(1629, new GeoPoint(37211850, -80398170));
		STOP_LOCATIONS.put(1630, new GeoPoint(37212460, -80396070));
		STOP_LOCATIONS.put(1631, new GeoPoint(37212430, -80393400));
		STOP_LOCATIONS.put(1632, new GeoPoint(37211440, -80393750));
		STOP_LOCATIONS.put(1633, new GeoPoint(37209740, -80395690));
		STOP_LOCATIONS.put(1634, new GeoPoint(37208670, -80396720));
		STOP_LOCATIONS.put(1635, new GeoPoint(37223930, -80408070));
		STOP_LOCATIONS.put(1636, new GeoPoint(37193630, -80400270));
		STOP_LOCATIONS.put(1637, new GeoPoint(37194230, -80397630));
		STOP_LOCATIONS.put(1638, new GeoPoint(37197130, -80400270));
		STOP_LOCATIONS.put(1639, new GeoPoint(37201980, -80399450));
		STOP_LOCATIONS.put(1640, new GeoPoint(37207230, -80398980));
		STOP_LOCATIONS.put(1641, new GeoPoint(37207526, -80393889));
		STOP_LOCATIONS.put(1642, new GeoPoint(37207230, -80398980));
		STOP_LOCATIONS.put(1643, new GeoPoint(37202750, -80399380));
		STOP_LOCATIONS.put(1644, new GeoPoint(37200160, -80400310));
		STOP_LOCATIONS.put(1645, new GeoPoint(37196790, -80400270));
		STOP_LOCATIONS.put(1646, new GeoPoint(37194230, -80397630));
		STOP_LOCATIONS.put(1647, new GeoPoint(37193630, -80400270));
		STOP_LOCATIONS.put(1700, new GeoPoint(37214820, -80418410));
		STOP_LOCATIONS.put(1701, new GeoPoint(37201700, -80411720));
		STOP_LOCATIONS.put(1702, new GeoPoint(37201130, -80410650));
		STOP_LOCATIONS.put(1703, new GeoPoint(37205299, -80408502));
		STOP_LOCATIONS.put(1704, new GeoPoint(37215740, -80418690));
		STOP_LOCATIONS.put(1705, new GeoPoint(37204000, -80412460));
		STOP_LOCATIONS.put(1706, new GeoPoint(37204280, -80409930));
		STOP_LOCATIONS.put(1707, new GeoPoint(37201130, -80410650));
		STOP_LOCATIONS.put(1708, new GeoPoint(37201700, -80411720));
		STOP_LOCATIONS.put(1709, new GeoPoint(37204000, -80412460));
		STOP_LOCATIONS.put(1710, new GeoPoint(37198940, -80405450));
		STOP_LOCATIONS.put(1711, new GeoPoint(37196100, -80403920));
		STOP_LOCATIONS.put(1712, new GeoPoint(37196100, -80403920));
		STOP_LOCATIONS.put(1713, new GeoPoint(37202640, -80405880));
		STOP_LOCATIONS.put(1714, new GeoPoint(37200140, -80407850));
		STOP_LOCATIONS.put(1715, new GeoPoint(37201870, -80409790));
		STOP_LOCATIONS.put(1716, new GeoPoint(37199970, -80405340));
		STOP_LOCATIONS.put(1800, new GeoPoint(37163380, -80429450));
		STOP_LOCATIONS.put(1801, new GeoPoint(37164230, -80428980));
		STOP_LOCATIONS.put(1802, new GeoPoint(37170439, -80426497));
		STOP_LOCATIONS.put(1803, new GeoPoint(37187730, -80414310));
		STOP_LOCATIONS.put(2100, new GeoPoint(37131420, -80393310));
		STOP_LOCATIONS.put(2101, new GeoPoint(37137200, -80396200));
		STOP_LOCATIONS.put(2102, new GeoPoint(37137877, -80396971));
		STOP_LOCATIONS.put(2103, new GeoPoint(37142530, -80394224));
		STOP_LOCATIONS.put(2104, new GeoPoint(37143693, -80404228));
		STOP_LOCATIONS.put(2105, new GeoPoint(37138818, -80412672));
		STOP_LOCATIONS.put(2108, new GeoPoint(37130820, -80414600));
		STOP_LOCATIONS.put(2109, new GeoPoint(37128290, -80410590));
		STOP_LOCATIONS.put(2110, new GeoPoint(37131360, -80407673));
		STOP_LOCATIONS.put(2111, new GeoPoint(37130170, -80402130));
		STOP_LOCATIONS.put(2112, new GeoPoint(37155528, -80414785));
		STOP_LOCATIONS.put(2113, new GeoPoint(37136390, -80370010));
		STOP_LOCATIONS.put(2114, new GeoPoint(37137180, -80372850));
		STOP_LOCATIONS.put(2115, new GeoPoint(37127090, -80370410));
		STOP_LOCATIONS.put(2116, new GeoPoint(37134120, -80384980));
		STOP_LOCATIONS.put(2117, new GeoPoint(37131420, -80393310));
		STOP_LOCATIONS.put(2118, new GeoPoint(37130460, -80397280));
		STOP_LOCATIONS.put(2119, new GeoPoint(37130160, -80402670));
		STOP_LOCATIONS.put(2120, new GeoPoint(37130720, -80407740));
		STOP_LOCATIONS.put(2121, new GeoPoint(37135003, -80378994));
		STOP_LOCATIONS.put(2122, new GeoPoint(37133760, -80400690));
		STOP_LOCATIONS.put(2123, new GeoPoint(37133760, -80400690));
		STOP_LOCATIONS.put(2124, new GeoPoint(37132420, -80405750));
		STOP_LOCATIONS.put(2125, new GeoPoint(37132420, -80405750));
		STOP_LOCATIONS.put(2126, new GeoPoint(37132430, -80412490));
		STOP_LOCATIONS.put(2127, new GeoPoint(37132430, -80412490));
		STOP_LOCATIONS.put(2128, new GeoPoint(37148440, -80416300));
		STOP_LOCATIONS.put(2129, new GeoPoint(37146790, -80425050));
		STOP_LOCATIONS.put(2130, new GeoPoint(37144250, -80423830));
		STOP_LOCATIONS.put(2131, new GeoPoint(37130420, -80397720));
		STOP_LOCATIONS.put(2132, new GeoPoint(37152000, -80412850));
		STOP_LOCATIONS.put(2200, new GeoPoint(37158240, -80423150));
		STOP_LOCATIONS.put(2201, new GeoPoint(37156440, -80421240));
		STOP_LOCATIONS.put(2202, new GeoPoint(37162574, -80420869));
		STOP_LOCATIONS.put(2203, new GeoPoint(37164090, -80419920));
		STOP_LOCATIONS.put(2204, new GeoPoint(37165300, -80417930));
		STOP_LOCATIONS.put(2205, new GeoPoint(37167600, -80417480));
		STOP_LOCATIONS.put(2206, new GeoPoint(37168800, -80419600));
		STOP_LOCATIONS.put(2209, new GeoPoint(37166710, -80425190));
		STOP_LOCATIONS.put(2210, new GeoPoint(37164230, -80428980));
		STOP_LOCATIONS.put(2301, new GeoPoint(37136520, -80413790));
		STOP_LOCATIONS.put(2302, new GeoPoint(37136520, -80413790));
		STOP_LOCATIONS.put(2303, new GeoPoint(37151160, -80414520));
		
	}

	private void doStopCodes() {
		STOPCODES.put(1100, "Newman Library");
		STOPCODES.put(1101, "Burruss Hall");
		STOPCODES.put(1102, "Davidson Hall");
		STOPCODES.put(1103, "West Campus/Perry Nbnd");
		STOPCODES.put(1104, "Old Security Bldg");
		STOPCODES.put(1105, "Stanger/Perry Nbnd");
		STOPCODES.put(1106, "McBryde Hall");
		STOPCODES.put(1107, "Hutcheson Hall");
		STOPCODES.put(1108, "War Memorial Hall");
		STOPCODES.put(1110, "Squires Ebnd");
		STOPCODES.put(1111, "Alumni Mall Ebnd");
		STOPCODES.put(1112, "Alumni Mall Wbnd");
		STOPCODES.put(1113, "Squires Wbnd");
		STOPCODES.put(1114, "Torgerson Hall");
		STOPCODES.put(1115, "Wright House");
		STOPCODES.put(1116, "Litton Reaves Hall");
		STOPCODES.put(1123, "McComas Hall");
		STOPCODES.put(1124, "Cassell Coliseum");
		STOPCODES.put(1125, "Tennis Courts");
		STOPCODES.put(1126, "Harper Hall");
		STOPCODES.put(1127, "Lane Stadium S Endzone Sbnd");
		STOPCODES.put(1128, "Lane Stadium S Endzone Nbnd");
		STOPCODES.put(1129, "Coliseum Parking Lot Sbnd");
		STOPCODES.put(1133, "CTAS Institute Bldg");
		STOPCODES.put(1200, "Prices Fork/Old Glade Wbnd");
		STOPCODES.put(1201, "Vet School Wbnd");
		STOPCODES.put(1202, "Prices Fork/Plantation Wbnd");
		STOPCODES.put(1203, "Prices Fork/Huntington Wbnd");
		STOPCODES.put(1204, "Hethwood Square on Hethwood");
		STOPCODES.put(1205, "Tall Oaks/Hethwood Ebnd");
		STOPCODES.put(1206, "Tall Oaks/Foxhunt Ebnd");
		STOPCODES.put(1207, "Tall Oaks/Heather Ebnd");
		STOPCODES.put(1208, "Tall Oaks/Foxtrail Sbnd");
		STOPCODES.put(1209, "Stroubles Cr");
		STOPCODES.put(1210, "Tall Oaks/Foxridge Nbnd");
		STOPCODES.put(1211, "Tall Oaks/Copper Croft Nbnd");
		STOPCODES.put(1212, "Heather/Tall Oaks Nbnd");
		STOPCODES.put(1213, "Heather/Plymouth Nbnd");
		STOPCODES.put(1214, "Heather/Huntington Nbnd");
		STOPCODES.put(1215, "Prices Fork/Huntington Ebnd");
		STOPCODES.put(1216, "Prices Fork/Plantation Ebnd");
		STOPCODES.put(1217, "Vet School Ebnd");
		STOPCODES.put(1218, "Prices Fork/Old Glade Ebnd");
		STOPCODES.put(1305, "Progress/Broce Nbnd");
		STOPCODES.put(1306, "Progress/University Terr Nbnd");
		STOPCODES.put(1307, "Progress/Patrick Henry Nbnd");
		STOPCODES.put(1308, "The Village on Patrick Henry Wbnd");
		STOPCODES.put(1309, "Patrick Henry/Toms Creek Wbnd");
		STOPCODES.put(1310, "University City/Toms Creek Wbnd");
		STOPCODES.put(1311, "Shawnee on University City Wbnd");
		STOPCODES.put(1312, "Shawnee on University City Sbnd");
		STOPCODES.put(1313, "University City/Broce Sbnd");
		STOPCODES.put(1314, "University City/Glade Sbnd");
		STOPCODES.put(1315, "University Mall Sbnd");
		STOPCODES.put(1316, "University Mall Nbnd");
		STOPCODES.put(1317, "University City/Glade Nbnd");
		STOPCODES.put(1318, "University City/Broce Nbnd");
		STOPCODES.put(1319, "Shawnee on University City Nbnd");
		STOPCODES.put(1320, "Shawnee on University City Ebnd");
		STOPCODES.put(1321, "University City/Falcon Ebnd");
		STOPCODES.put(1322, "University City/Toms Creek Ebnd");
		STOPCODES.put(1323, "Patrick Henry/Toms Creek Ebnd");
		STOPCODES.put(1324, "The Village on Patrick Henry Ebnd");
		STOPCODES.put(1325, "Patrick Henry/Progress Ebnd");
		STOPCODES.put(1326, "Progress/Hunt Club Sbnd");
		STOPCODES.put(1327, "Progress/University Terr Sbnd");
		STOPCODES.put(1328, "Progress/Broce Sbnd");
		STOPCODES.put(1330, "Toms Creek/McBryde Sbnd");
		STOPCODES.put(1331, "Toms Creek/Watson Sbnd");
		STOPCODES.put(1332, "Gilbert Linkous Sbnd");
		STOPCODES.put(1333, "Toms Creek/Winston Sbnd");
		STOPCODES.put(1334, "Prices Fork/Turner Ebnd");
		STOPCODES.put(1338, "Toms Creek/Hunt Club Sbnd");
		STOPCODES.put(1339, "Progress/Watson Nbnd");
		STOPCODES.put(1400, "Main/Montgomery Nbnd");
		STOPCODES.put(1401, "Main/Lucas Nbnd S");
		STOPCODES.put(1402, "Lucas/Main Ebnd");
		STOPCODES.put(1403, "Lucas/Giles Ebnd");
		STOPCODES.put(1404, "Giles/Northview Nbnd");
		STOPCODES.put(1405, "Giles/Heights Nbnd");
		STOPCODES.put(1406, "Giles/Patrick Henry Nbnd");
		STOPCODES.put(1407, "Patrick Henry/Giles Wbnd");
		STOPCODES.put(1408, "Patrick Henry/Main Wbnd");
		STOPCODES.put(1409, "1500 North Main Nbnd");
		STOPCODES.put(1410, "Main/Giles Nbnd");
		STOPCODES.put(1411, "Main/Red Maple Nbnd");
		STOPCODES.put(1412, "Givens/Main Wbnd");
		STOPCODES.put(1413, "Whipple/Givens Wbnd");
		STOPCODES.put(1414, "Pheasant Run");
		STOPCODES.put(1415, "Seneca/Patrick Henry Sbnd");
		STOPCODES.put(1416, "Main/Patrick Henry Sbnd");
		STOPCODES.put(1417, "1200 North Main Sbnd");
		STOPCODES.put(1418, "Main/Northview Sbnd");
		STOPCODES.put(1419, "Main/Lucas Sbnd");
		STOPCODES.put(1420, "Main/Montgomery Sbnd");
		STOPCODES.put(1421, "Main/Kabrich Sbnd");
		STOPCODES.put(1422, "Main/Collegiate Ct Sbnd");
		STOPCODES.put(1423, "Main/Turner Sbnd");
		STOPCODES.put(1428, "Whipple/Courtney Sbnd");
		STOPCODES.put(1429, "1500 North Main Sbnd");
		STOPCODES.put(1430, "Patrick Henry/Seneca Wbnd");
		STOPCODES.put(1431, "Main/Turner Nbnd");
		STOPCODES.put(1500, "Roanoke/Church Ebnd");
		STOPCODES.put(1501, "Roanoke/Wharton Ebnd");
		STOPCODES.put(1502, "Roanoke/Rutledge Ebnd");
		STOPCODES.put(1503, "Roanoke/Woolwine Ebnd");
		STOPCODES.put(1504, "Harding/Owens Ebnd");
		STOPCODES.put(1505, "Harding/Cork Ebnd");
		STOPCODES.put(1506, "Harding/Patrick Henry Ebnd");
		STOPCODES.put(1507, "Harding/Apperson Ebnd");
		STOPCODES.put(1508, "Harding/Vista Ebnd");
		STOPCODES.put(1509, "Harding/Roanoke Ebnd");
		STOPCODES.put(1510, "Ascot/Harding Ebnd");
		STOPCODES.put(1511, "Ascot/Hampton");
		STOPCODES.put(1512, "Ascot/Harding Wbnd");
		STOPCODES.put(1513, "Harding/Rucker Wbnd");
		STOPCODES.put(1514, "Harding/Sutton Wbnd");
		STOPCODES.put(1515, "Harding/Apperson Wbnd");
		STOPCODES.put(1516, "Harding/Patrick Henry Wbnd");
		STOPCODES.put(1517, "Harding/Cork Wbnd");
		STOPCODES.put(1518, "Roanoke/Woolwine Wbnd");
		STOPCODES.put(1519, "Roanoke/Rutledge Wbnd");
		STOPCODES.put(1520, "Roanoke/Wharton Wbnd");
		STOPCODES.put(1521, "Roanoke/Penn Wbnd");
		STOPCODES.put(1600, "Main/Roanoke Sbnd");
		STOPCODES.put(1601, "Blacksburg Municipal Building");
		STOPCODES.put(1602, "Main/Eheart Sbnd");
		STOPCODES.put(1603, "Main/Eakin Sbnd");
		STOPCODES.put(1604, "Main/Edgewood Sbnd");
		STOPCODES.put(1605, "Main/Airport Sbnd");
		STOPCODES.put(1606, "Main/Faystone Sbnd");
		STOPCODES.put(1607, "Gables Shopping Center");
		STOPCODES.put(1608, "Main/Landsdowne Sbnd");
		STOPCODES.put(1609, "Fairfax/Ellett Ebnd");
		STOPCODES.put(1610, "Fairfax/New Kent Ebnd");
		STOPCODES.put(1611, "New Kent/Loudon Ebnd");
		STOPCODES.put(1612, "New Kent/Sussex Ebnd");
		STOPCODES.put(1613, "Grissom/Nellies Cave Nbnd");
		STOPCODES.put(1614, "Marlington/Grissom Wbnd");
		STOPCODES.put(1615, "Marlington/Emerald Wbnd");
		STOPCODES.put(1616, "Marlington/Grayland Wbnd");
		STOPCODES.put(1617, "Marlington/Main Wbnd");
		STOPCODES.put(1618, "Main/Landsdowne Nbnd");
		STOPCODES.put(1619, "Main/Ardmore Nbnd");
		STOPCODES.put(1620, "Blacksburg Square");
		STOPCODES.put(1621, "Main/Cohee Nbnd");
		STOPCODES.put(1622, "Main/Sunset Nbnd");
		STOPCODES.put(1623, "Main/Graves Nbnd");
		STOPCODES.put(1624, "Main/Hemlock Nbnd");
		STOPCODES.put(1625, "Main/Eakin Nbnd");
		STOPCODES.put(1626, "Main/Clay Nbnd");
		STOPCODES.put(1627, "Main/Lee Nbnd");
		STOPCODES.put(1628, "Main St Post Office");
		STOPCODES.put(1629, "Marlington/Grayland Ebnd");
		STOPCODES.put(1630, "Marlington/Emerald Ebnd");
		STOPCODES.put(1631, "Grissom/Nellies Cave Sbnd");
		STOPCODES.put(1632, "New Kent/Sussex Wbnd");
		STOPCODES.put(1633, "New Kent/Loudon Wbnd");
		STOPCODES.put(1634, "Fairfax/Ellett Wbnd");
		STOPCODES.put(1635, "Main/Hemlock Sbnd");
		STOPCODES.put(1636, "Industrial Park/Transportation Res Ebnd");
		STOPCODES.put(1637, "Prosperity/Industrial Park Nbnd");
		STOPCODES.put(1638, "Professional Park Nbnd");
		STOPCODES.put(1639, "Main/Dowdy Nbnd");
		STOPCODES.put(1640, "Main/S Hill Nbnd");
		STOPCODES.put(1641, "Fairfax Circle");
		STOPCODES.put(1642, "Main/S Hill Sbnd");
		STOPCODES.put(1643, "Main/Dowdy Sbnd");
		STOPCODES.put(1644, "Main/South Park Sbnd");
		STOPCODES.put(1645, "Professional Park Sbnd");
		STOPCODES.put(1646, "Prosperity/Industrial Park Sbnd");
		STOPCODES.put(1647, "Industrial Park/Transportation Res Wbnd");
		STOPCODES.put(1700, "Rec Fields Sbnd");
		STOPCODES.put(1701, "Pratt Dr/Garvin Bldg Sbnd");
		STOPCODES.put(1702, "Pratt/Kraft Ebnd");
		STOPCODES.put(1703, "Airport");
		STOPCODES.put(1704, "Rec Fields Nbnd");
		STOPCODES.put(1705, "Pratt Dr/Andrews Bldg Sbnd");
		STOPCODES.put(1706, "Kraft/Tech Center Dr Sbnd");
		STOPCODES.put(1707, "Pratt/Kraft Wbnd");
		STOPCODES.put(1708, "Pratt Dr/Garvin Bldg Nbnd");
		STOPCODES.put(1709, "Pratt Dr/Andrews Bldg Nbnd");
		STOPCODES.put(1710, "Kraft/Research Ctr Ebnd");
		STOPCODES.put(1711, "Research Ctr/Rimrock Sbnd");
		STOPCODES.put(1712, "Research Ctr/Rimrock Nbnd");
		STOPCODES.put(1713, "Research Ctr/N Knollwood Nbnd");
		STOPCODES.put(1714, "Kraft/Knowledgeworks 1 Bldg Sbnd");
		STOPCODES.put(1715, "Kraft/Moss Bldg Sbnd");
		STOPCODES.put(1716, "Research Ctr/S Knollwood Nbnd");
		STOPCODES.put(1800, "New River Valley Mall");
		STOPCODES.put(1801, "NRV Theatre");
		STOPCODES.put(1802, "Wal Mart");
		STOPCODES.put(1803, "Montgomery Regional Hospital");
		STOPCODES.put(2100, "Montgomery County Govt Center");
		STOPCODES.put(2101, "Replublic/Salem");
		STOPCODES.put(2102, "Park/Hagan");
		STOPCODES.put(2103, "Park/East");
		STOPCODES.put(2104, "Depot/Cambria");
		STOPCODES.put(2105, "Aquatic Center");
		STOPCODES.put(2108, "Depot/New Wbnd");
		STOPCODES.put(2109, "W Main/Dunkley Ebnd");
		STOPCODES.put(2110, "Montgomery County Courthouse");
		STOPCODES.put(2111, "Roanoke/Evans Ebnd");
		STOPCODES.put(2112, "Recreation Center");
		STOPCODES.put(2113, "Simmons/Hammes Nbnd");
		STOPCODES.put(2114, "Eletric Way/Hubbell Wbnd");
		STOPCODES.put(2115, "Falling Branch Park and Ride");
		STOPCODES.put(2116, "Roanoke/Hungate Wbnd");
		STOPCODES.put(2117, "Roanoke/East Wbnd");
		STOPCODES.put(2118, "Roanoke/Craig Wbnd");
		STOPCODES.put(2119, "Roanoke/Evans Wbnd");
		STOPCODES.put(2120, "Christiansburg Town Hall");
		STOPCODES.put(2121, "Gateway Plaza North");
		STOPCODES.put(2122, "Park/Lester Wbnd");
		STOPCODES.put(2123, "Park/Lester Ebnd");
		STOPCODES.put(2124, "Main/Calhoun Wbnd");
		STOPCODES.put(2125, "Main/Calhoun Ebnd");
		STOPCODES.put(2126, "North Franklin/Depot Nbnd");
		STOPCODES.put(2127, "North Franklin/Depot Sbnd");
		STOPCODES.put(2128, "Oak Tree/Patricks Way Wbnd");
		STOPCODES.put(2129, "Oak Tree/Gold Leaf Wbnd");
		STOPCODES.put(2130, "Independence/Freedom Ebnd");
		STOPCODES.put(2131, "Roanoke/Roberts Ebnd");
		STOPCODES.put(2132, "Northgate Plaza/Cambria");
		STOPCODES.put(2200, "Conston/Spradlin Farm Wbnd");
		STOPCODES.put(2201, "Farmview/Ridinger Ebnd");
		STOPCODES.put(2202, "Laurel/Sycamore");
		STOPCODES.put(2203, "Laurel/Peppers Ferry Nbnd");
		STOPCODES.put(2204, "DMV on Arbor");
		STOPCODES.put(2205, "Post Office on Arbor Nbnd");
		STOPCODES.put(2206, "Arbor/Market Wbnd");
		STOPCODES.put(2209, "Shoppers Way Wbnd");
		STOPCODES.put(2210, "NRV Theatre");
		STOPCODES.put(2301, "North Franklin/Wades Nbnd");
		STOPCODES.put(2302, "North Franklin/Wades Sbnd");
		STOPCODES.put(2303, "North Franklin/Cambria Nbnd");
	}

	private void doShortToLong() {
		STOL_ROUTE_NAMES.put("BTC", "BT Commuter");
		STOL_ROUTE_NAMES.put("CRC", "Corporate Research Center");
		STOL_ROUTE_NAMES.put("CRCH", "Corporate Research Center-Hospital");
		STOL_ROUTE_NAMES.put("HDG", "Harding Avenue");
		STOL_ROUTE_NAMES.put("HWD", "Hethwood");
		STOL_ROUTE_NAMES.put("HXP", "Hokie Express");
		STOL_ROUTE_NAMES.put("MSN", "Main Street North");
		STOL_ROUTE_NAMES.put("MSS", "Main Street South");
		STOL_ROUTE_NAMES.put("PH", "Patrick Henry");
		STOL_ROUTE_NAMES.put("PRG", "Progress Street");
		STOL_ROUTE_NAMES.put("TC", "Toms Creek");
		STOL_ROUTE_NAMES.put("TE", "The Explorer");
		STOL_ROUTE_NAMES.put("TTT", "Two Town Trolley");
		STOL_ROUTE_NAMES.put("UCB", "University City Boulevard");
		STOL_ROUTE_NAMES.put("UMS", "University Mall Shuttle");
	}
	private void doLongToShort() {
		LTOS_ROUTE_NAME.put("BT Commuter", "BTC");
		LTOS_ROUTE_NAME.put("Corporate Research Center", "CRC");
		LTOS_ROUTE_NAME.put("Corporate Research Center-Hospital", "CRCH");
		LTOS_ROUTE_NAME.put("Harding Avenue", "HDG");
		LTOS_ROUTE_NAME.put("Hethwood", "HWD");
		LTOS_ROUTE_NAME.put("Hokie Express", "HXP");
		LTOS_ROUTE_NAME.put("Main Street North", "MSN");
		LTOS_ROUTE_NAME.put("Main Street South", "MSS");
		LTOS_ROUTE_NAME.put("Patrick Henry", "PH");
		LTOS_ROUTE_NAME.put("Progress Street", "PRG");
		LTOS_ROUTE_NAME.put("Toms Creek", "TC");
		LTOS_ROUTE_NAME.put("The Explorer", "TE");
		LTOS_ROUTE_NAME.put("Two Town Trolley", "TTT");
		LTOS_ROUTE_NAME.put("University City Boulevard", "UCB");
		LTOS_ROUTE_NAME.put("University Mall Shuttle", "UMS");
	}
}

